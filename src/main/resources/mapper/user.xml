<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="user"> <!-- mapper파일의 이름 -->

	<sql id="boardWhere">
		<where>
			<if test="searchType == ''">
				(id LIKE '%${searchWord}%' OR name LIKE '%${searchWord}%' OR userno in (select userno from user where nickname LIKE '%${searchWord}%'))
			</if>
			<if test="searchType != 'nickname' and searchType != 'name' and searchType != null and searchType !=''">
				${searchType} LIKE '%${searchWord}%'
			</if>
			<if test="searchType == 'nickname'">
				userno in (select userno from user where nickname LIKE '%${searchWord}%')
			</if>
		</where>
	</sql>

	<select id="count" resultType="int" parameterType="user.UserVo">
		SELECT COUNT(*) FROM user
	</select>
	
	<insert id="insert" parameterType="user.UserVo" useGeneratedKeys="true">
		INSERT INTO user (
			 id, pwd, name, nickname, gender, regdate, tel, moddate, zipcode, addr1, addr2, email
		) VALUES (
			 #{id}, md5(#{pwd}), #{name}, #{nickname}, #{gender}, NOW(), #{tel}, NOW(), #{zipcode}, #{addr1}, #{addr2}, #{email}
		)
		<selectKey keyProperty="userno" resultType="int" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<select id="idCheck" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM user WHERE id = #{id}
	</select>
	
	<select id="login" parameterType="user.UserVo" resultType="user.UserVo">
		SELECT * FROM user WHERE id = #{id} and pwd = md5(#{pwd})
	</select>

	<select id="selectList" resultType="user.UserVo" parameterType="user.UserVo">
		SELECT * FROM user
		<include refid="boardWhere" />
		order by regdate desc      
		limit ${startIdx}, 10   
	</select>
	
		<!-- 아이디,비밀번호 찾기 -->
	<select id="searchId" parameterType="user.UserVo" resultType="user.UserVo">
		SELECT * FROM user WHERE tel = #{tel} AND name = #{name}
	</select>
	<select id="searchPwd" parameterType="user.UserVo" resultType="user.UserVo">
		SELECT * FROM user WHERE email = #{email} AND name = #{name}
	</select>
	
	<update id="updateTempPwd" parameterType="user.UserVo">
		UPDATE user SET pwd = md5(#{pwd}) WHERE email = #{email} AND name = #{name}
	</update>
	
	<update id="infoUpdate" parameterType="user.UserVo" >
		UPDATE user SET 
			nickname = #{nickname} , tel = #{tel} , regdate = NOW() , 
			zipcode = #{zipcode}, addr1 = #{addr1}, addr2 = #{addr2} 
			
			, filename_org=#{filename_org}
			, filename_real=#{filename_real}
			
			WHERE id = #{id}
	</update>
	
	<update id="pwdChange" parameterType="user.UserVo">
		UPDATE user SET
			pwd = md5(#{newPwd})
			WHERE pwd = md5(#{pwd})
	</update>
	
	<select id="countMyBoard" resultType="int" parameterType="freeboard.FreeBoardVo">
		SELECT COUNT(*) FROM (
			select board_no, title,  (select nickname from thejoun.user where userno=free_board.userno) nickname, regdate, readcount, (select count(*) from thejoun.like where tablename=1 and board_no=free_board.board_no) l_count
			from free_board
			where userno = #{userno} 
			union
			select concern_board_no, (select nickname from thejoun.user where userno=concern_board.userno) nickname, title, regdate, readcount, (select count(*) from thejoun.like where tablename=2 and board_no=concern_board.concern_board_no) l_count
			from concern_board
			where userno = #{userno}
			union
			select image_board_no, (select nickname from thejoun.user where userno=image_board.userno) nickname, title, regdate, readcount, (select count(*) from thejoun.like where tablename=3 and board_no=image_board.image_board_no) l_count
			from image_board
			where userno = #{userno}
			union
			select video_board_no, (select nickname from thejoun.user where userno=video_board.userno) nickname, title, regdate, readcount, (select count(*) from thejoun.like where tablename=4 and board_no=video_board.video_board_no) l_count  
			from video_board
			where userno = #{userno}
		) as a
	</select>
	
	<select id="selectMyBoard" parameterType="freeboard.FreeBoardVo" resultType="freeboard.FreeBoardVo">
		select board_no as board_no , title,  (select nickname from thejoun.user where userno=free_board.userno) nickname, regdate, readcount, (select count(*) from thejoun.like where tablename=1 and board_no=free_board.board_no) l_count, 1 as tablename
			from free_board
			where userno = #{userno} 
			union
			select concern_board_no as board_no, (select nickname from thejoun.user where userno=concern_board.userno) nickname, title, regdate, readcount, (select count(*) from thejoun.like where tablename=2 and board_no=concern_board.concern_board_no) l_count, 2 as tablename
			from concern_board
			where userno = #{userno} 
			union
			select image_board_no as board_no, (select nickname from thejoun.user where userno=image_board.userno) nickname, title, regdate, readcount, (select count(*) from thejoun.like where tablename=3 and board_no=image_board.image_board_no) l_count, 3 as tablename
			from image_board
			where userno = #{userno} 
			union
			select video_board_no as board_no, (select nickname from thejoun.user where userno=video_board.userno) nickname, title, regdate, readcount, (select count(*) from thejoun.like where tablename=4 and board_no=video_board.video_board_no) l_count  , 4 as tablename
			from video_board
			where userno = #{userno}  
			order by regdate desc  
			limit ${startIdx}, 10 ;
	</select>
</mapper>  