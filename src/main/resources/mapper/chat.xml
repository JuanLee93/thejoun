<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chat"> <!-- mapper파일의 이름 -->

	
	<select id="findChattingList" parameterType="chat.ChatVo" resultType="chat.ChatVo">
		SELECT * FROM chat
		WHERE (from_id = #{from_id} AND to_id = #{to_id}) OR (from_id = #{to_id} AND to_id = #{from_id})
	</select>
	
	<select id="findOtherUser" parameterType="int" resultType="user.UserVo">
		SELECT * FROM user WHERE userno = #{value}
	</select>
	
	<insert id="sendMessage" parameterType="chat.ChatVo" useGeneratedKeys="true">
		INSERT INTO chat(from_id, to_id, chatcontent, chatregdate, checkmessage)
		VALUES(#{from_id}, #{to_id}, #{chatcontent}, NOW(), 1)
	</insert>
	
	<select id="findFriendsList" parameterType="int" resultType="user.UserVo">
		SELECT a.userno, a.id, a.nickname, a.gender, a.email, sum(if(c.checkmessage = 1, 1, 0)) as messagecount, (unix_timestamp(now()) - unix_timestamp(c.chatregdate)) as regdateCheck,IF(c.chatno, max(c.chatno), 0) as finalno
		FROM (SELECT userno, id, nickname, gender, email FROM user WHERE userno IN (SELECT friends_userno FROM friends WHERE my_userno = #{value} 
		UNION SELECT my_userno FROM friends WHERE friends_userno = #{value})) as a LEFT JOIN chat as c
		ON c.from_id = a.userno AND c.to_id = #{value} GROUP BY a.userno
	    ORDER BY finalno DESC;
	</select>
	
	<update id="messageUpdate" parameterType="chat.ChatVo">
		UPDATE chat SET checkmessage = 0 WHERE from_id = #{to_id} AND to_id =#{from_id} 
	</update>
	
</mapper>